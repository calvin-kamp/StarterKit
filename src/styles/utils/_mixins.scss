@use '@styles/utils/_config' as *;
@use '@styles/utils/_functions' as *;

/* -------------------------------------------------------- */
/*                          MIXINS                          */
/* -------------------------------------------------------- */

// Adds a media query for a specified viewport size
@mixin viewport($viewport) {
	@media screen and (min-width: get-min-width($viewport)) {
		@content;
	}
}

// Adds a media query for a specified custom minimum width
@mixin manual-viewport($viewport-min-width) {
	@media screen and (min-width: $viewport-min-width) {
		@content;
	}
}

// Applies a flexbox layout to an element
@mixin flex($flex-direction: row, $flex-wrap: wrap) {
	display: -webkit-flex;
	display: flex;

	-webkit-flex-direction: $flex-direction;
	-ms-flex-direction: $flex-direction;
	flex-direction: $flex-direction;

	-webkit-flex-wrap: $flex-wrap;
	-ms-flex-wrap: $flex-wrap;
	flex-wrap: $flex-wrap;
}

// Adds a CSS grid layout to an element
@mixin grid($grid-template-columns: $grid-columns, $grid-template-rows: none, $row-gap: none) {
	display: grid;
	grid-auto-flow: row;

	@if $grid-template-rows != none {
		-ms-grid-rows: $grid-template-columns;
		grid-template-rows: $grid-template-rows;
	}

	-ms-grid-columns: repeat(#{$grid-template-columns}, 1fr);
	grid-template-columns: repeat(#{$grid-template-columns}, 1fr);

	@if $row-gap != none {
		row-gap: $row-gap;
	}
}
